{"version":3,"file":"static/js/168.bd96a829.chunk.js","mappings":"mTAEMA,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,yKC7BVO,EAAQC,EAAAA,GAAAA,GAAH,sCAGLC,EAAWD,EAAAA,GAAAA,IAAH,8FAKRE,EAAYF,EAAAA,GAAAA,IAAH,+CAGTG,EAAaH,EAAAA,GAAAA,GAAH,4FAwBVI,GAlBSJ,EAAAA,GAAAA,OAAH,qTAkBKA,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,0XA0BRM,EAAUN,EAAAA,GAAAA,IAAH,4EAKPO,GAAaP,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,oeA4BVQ,GAAWR,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,ihB,mBCrBrB,EA7DqB,WAAO,IAAD,IACzB,GAAsCS,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAgBmB,GAASG,MAAK,SAAAzB,GAAI,OAAImB,EAAenB,EAAnB,GACnC,GAAE,CAACsB,IAEJ,IAAQI,EACNR,EADMQ,eAAgBC,EACtBT,EADsBS,SAAUC,EAChCV,EADgCU,OAAQC,EACxCX,EADwCW,YAGpCC,GADuB,GAD3BZ,EADqDa,cAG5BC,QAAQ,GACnC,OACE,6BACE,UAACpB,EAAD,CAAUqB,GAAE,oBAAEb,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,WACE,SAAC,MAAD,CAAmBC,KAAM,KAAM,cAIjC,UAAC3B,EAAD,YACE,gBACE4B,IACER,EAAW,yCAC2BA,GAD3B,+CAIbS,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRC,IAAI,YAEN,UAAC/B,EAAD,YACE,SAACH,EAAD,UAAQmB,KACR,0BAAI,eAAaI,EAAa,QAC9B,wBAAI,cACJ,yBAAIH,EAAS,QACb,wBAAI,YACJ,SAAChB,EAAD,UACGiB,GACCA,EAAOc,QACPd,EAAOe,KAAI,gBAAGvC,EAAH,EAAGA,GAAIwC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALxC,EAA3B,aAInB,UAACU,EAAD,YACE,wBAAI,4BAEJ,SAACE,EAAD,CAAUkB,OAAK,UAAOd,EAASc,OAASD,GAAG,OAA3C,SAAkD,UAIlD,SAAClB,EAAD,CAAYmB,OAAK,UAAOd,EAASc,OAASD,GAAG,UAA7C,SAAuD,gBAIzD,SAAC,KAAD,MAGL,C","sources":["Api/apiService.js","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0585bdb531ffd463c0471d665e0201d5';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n// import { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin: 0;\n`;\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;\nexport const MovieInfo = styled.div`\n  padding: 20px 40px;\n`;\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  gap: 16px;\n`;\nexport const Button = styled.button`\n  margin-top: 16px;\n  margin-right: 10px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  &:hover {\n    background-color: blue;\n    color: white;\n  }\n  &.active {\n    background-color: blue;\n    color: white;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  \ndisplay: flex;\n  align-items: center;\n  gap: 5px;\n  width: 100px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  \n  color: black;\n  font-weight: 500;\n\n  &:hover,\n&:focus {\n  background-color: blue;\n  color: white;\n}\n\n  &.active {\n    color: white;\n    background-color: blue;\n  }\n  \n`;\nexport const InfoBox = styled.div`\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;\n\nexport const LinkReview = styled(Link)`\ngrid-area: cast;\njustify-self: start;\npadding: 6px 25px;\ncolor: black;\nfont-size: 16px;\nfont-weight: 500;\nborder-radius: 4px;\nborder: none;\n\nmargin-right: 10px;\n\ntransition: color rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n  rgba(0, 0, 0, 0.3) 0px 30px 60px 30px,\n  rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n&:hover,\n&:focus {\n  background-color: blue;\n  color: white;\n}\n\n&.active {\n  background-color: blue;\n  color: white;\n}\n`;\n\nexport const LinkCast = styled(Link)`\n  grid-area: cast;\n  justify-self: start;\n  padding: 6px 25px;\n  color: black;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n  border: none;\n  b\n  margin-right: 10px;\n\n  transition: color rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px 30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  &:hover,\n  &:focus {\n    background-color: blue;\n    color: white;\n  }\n\n  &.active {\n    background-color: blue;\n    color: white;\n  }\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../Api/apiService';\nimport { useState, useEffect } from 'react';\nimport {\n  GenresList,\n  InfoBox,\n  LinkBack,\n  MovieBox,\n  MovieInfo,\n  Title,\n  LinkReview,\n  LinkCast,\n} from './MovieDetails.styled';\n\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState({});\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => setMovieDetail(data));\n  }, [movieId]);\n\n  const { original_title, overview, genres, poster_path, vote_average } =\n    movieDetail;\n  const score = vote_average * 10;\n  const scoreToFixed = score.toFixed(2);\n  return (\n    <main>\n      <LinkBack to={location.state?.from ?? '/'}>\n        <HiArrowNarrowLeft size={16} />\n        Go back\n      </LinkBack>\n\n      <MovieBox>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          height={380}\n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n        <MovieInfo>\n          <Title>{original_title}</Title>\n          <h3>User score: {scoreToFixed}%</h3>\n          <h3>Overview</h3>\n          <p>{overview} </p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres &&\n              genres.length &&\n              genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </MovieInfo>\n      </MovieBox>\n      <InfoBox>\n        <h4>Additional information</h4>\n\n        <LinkCast state={{ ...location.state }} to=\"cast\">\n          Cast\n        </LinkCast>\n\n        <LinkReview state={{ ...location.state }} to=\"reviews\">\n          Reviews\n        </LinkReview>\n      </InfoBox>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Title","styled","MovieBox","MovieInfo","GenresList","LinkBack","Link","InfoBox","LinkReview","LinkCast","useState","movieDetail","setMovieDetail","location","useLocation","movieId","useParams","useEffect","then","original_title","overview","genres","poster_path","scoreToFixed","vote_average","toFixed","to","state","from","size","src","width","height","loading","alt","length","map","name"],"sourceRoot":""}