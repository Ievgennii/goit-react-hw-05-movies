{"version":3,"file":"static/js/387.c8a11396.chunk.js","mappings":"mTAEMA,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,2IC/BVO,EAAWC,EAAAA,GAAAA,GAAH,kGAORC,EAAWD,EAAAA,GAAAA,GAAH,8QAYRE,EAAUF,EAAAA,GAAAA,IAAH,oHAOPG,EAAYH,EAAAA,GAAAA,IAAH,qG,SCWtB,EAlCa,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAgBU,GAASG,MAAK,SAAAlB,GAAI,OAAIc,EAAYd,EAAKmB,KAArB,GACnC,GAAE,CAACJ,KAEF,SAACR,EAAD,UACGM,EAASO,OAAS,EACfP,EAASQ,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,UAACf,EAAD,YACE,SAACC,EAAD,CACEe,IACEF,EACI,kCAAoCA,EACpC,kHAENG,IAAKJ,KAEP,UAACX,EAAD,YACE,0BACE,uBAAG,WAAU,IAAEW,MAEjB,0BACE,uBAAG,eAAc,IAAEE,UAdVpB,EADJ,IAoBb,kCAGT,C","sources":["Api/apiService.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0585bdb531ffd463c0471d665e0201d5';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0 0 30px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  border-radius: 10px;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CastImg = styled.img`\nwidth: 200px;\n  min-height: 330px;\n  border-radius: 10px 10px 0 0;\n  object-fit: cover;\n`;\n\nexport const CastDescr = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from './../../Api/apiService';\nimport { CastItem, CastList, CastImg, CastDescr } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => setCastList(data.cast));\n  }, [movieId]);\n  return (\n    <CastList>\n      {castList.length > 0\n        ? castList.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <CastImg\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                }\n                alt={name}\n              />\n              <CastDescr>\n                <p>\n                  <b>Actor:</b> {name}\n                </p>\n                <p>\n                  <b>Character:</b> {character}\n                </p>\n              </CastDescr>\n            </CastItem>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","CastList","styled","CastItem","CastImg","CastDescr","useState","castList","setCastList","movieId","useParams","useEffect","then","cast","length","map","name","profile_path","character","src","alt"],"sourceRoot":""}